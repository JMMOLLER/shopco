---
import HamburgerIcon from "@icons/Hamburger.astro";
import CloseIcon from "@icons/Close.astro";
---

<button
  class="md:hidden focus:outline-none p-1 flex items-center justify-center"
  title="Toggle navigation"
  type="button"
>
  <span id="hamburger-icon">
    <HamburgerIcon />
  </span>
  <span id="close-icon" class="hidden">
    <CloseIcon />
  </span>
</button>
<nav
  class="absolute max-md:flex flex-col gap-y-4 items-center text-center left-0 z-10 p-5 rounded-lg w-full opacity-100 !hidden"
>
  <ul class="flex flex-col gap-y-3 items-center text-center">
    <li>
      <div data-accordion="true">
        <button class="flex justify-between items-center text-slate-800">
          <span>Shop</span>
          <span
            class="text-slate-800 transition-transform duration-300"
            data-icon
          >
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="w-4 h-4">
            <path fill-rule="evenodd" d="M4.22 6.22a.75.75 0 0 1 1.06 0L8 8.94l2.72-2.72a.75.75 0 1 1 1.06 1.06l-3.25 3.25a.75.75 0 0 1-1.06 0L4.22 7.28a.75.75 0 0 1 0-1.06Z" clip-rule="evenodd" />
          </svg>
          </span>
        </button>
        <ul
          class="max-h-0 overflow-hidden transition-all duration-300 ease-in-out"
          data-content
        >
          <li>
            <a aria-label="Ir a Item 1" class="text-nowrap" href="/">Item 1</a>
          </li>
          <li>
            <a aria-label="Ir a Item 2" class="text-nowrap" href="/">Item 2</a>
          </li>
        </ul>
      </div>
    </li>
    <li><a href="/">On Sale</a></li>
    <li><a href="/">New Arrivals</a></li>
    <li><a href="/">Brands</a></li>
  </ul>
</nav>

<script>
  // Selecciona el botón y los elementos relevantes
  const button = document.querySelector("button") as HTMLElement;
  const nav = document.querySelector("nav") as HTMLElement;
  const hamburgerIcon = document.getElementById(
    "hamburger-icon"
  ) as HTMLElement;
  const closeIcon = document.getElementById("close-icon") as HTMLElement;

  const onClose = "top-0 fade-out-down".split(" ");
  const onOpen = "top-full fade-in-down".split(" ");

  // Estado inicial
  let isOpen = false;

  // Maneja el evento de clic en el botón
  button.addEventListener("click", () => {
    isOpen = !isOpen; // Alterna el estado

    // Alterna la visibilidad de los íconos
    if (isOpen) {
      nav.classList.remove("!hidden");
      hamburgerIcon.classList.add("hidden");
      closeIcon.classList.remove("hidden");
      nav.classList.remove(...onClose);
      nav.classList.add(...onOpen);
    } else {
      hamburgerIcon.classList.remove("hidden");
      closeIcon.classList.add("hidden");
      nav.classList.add(...onClose);
      nav.classList.remove(...onOpen);
      const onEnd = () => {
        console.log("onEnd");
        nav.classList.remove(...onClose);
        nav.classList.add("!hidden");
        nav.removeEventListener("animationend", onEnd);
      };
      nav.addEventListener("animationend", onEnd);
    }
  });

  // lógica del acordeón

  const accordions = document.querySelectorAll("[data-accordion]");

  accordions.forEach((accordion, index) => {
    accordion.addEventListener("click", toggleAccordion);
  });

  function toggleAccordion(e: Event) {
    const el = e.currentTarget as HTMLElement;
    const content = el.querySelector("[data-content]") as HTMLElement;
    const icon = el.querySelector("[data-icon]") as HTMLElement;

    // SVG para la flecha hacia abajo
    const downSVG = `
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="w-4 h-4">
        <path fill-rule="evenodd" d="M4.22 6.22a.75.75 0 0 1 1.06 0L8 8.94l2.72-2.72a.75.75 0 1 1 1.06 1.06l-3.25 3.25a.75.75 0 0 1-1.06 0L4.22 7.28a.75.75 0 0 1 0-1.06Z" clip-rule="evenodd" />
      </svg>
    `;

    // SVG para el icono flecha arriba
    const upSVG = `
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="w-4 h-4">
        <path fill-rule="evenodd" d="M11.78 9.78a.75.75 0 0 1-1.06 0L8 7.06 5.28 9.78a.75.75 0 0 1-1.06-1.06l3.25-3.25a.75.75 0 0 1 1.06 0l3.25 3.25a.75.75 0 0 1 0 1.06Z" clip-rule="evenodd" />
      </svg>
    `;

    // Alterna la visibilidad del contenido
    if (content.style.maxHeight && content.style.maxHeight !== "0px") {
      el.className = "";
      content.style.maxHeight = "0";
      icon.innerHTML = downSVG;
    } else {
      el.className = "border-b border-slate-200 pb-2";
      content.style.maxHeight = content.scrollHeight + "px";
      icon.innerHTML = upSVG;
    }
  }
</script>

<style>
  nav {
    box-shadow: 1px 20px 20px 0px rgba(0, 0, 0, 0.25);
    background: rgb(255, 255, 255);
    background: -moz-linear-gradient(
      180deg,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 1) 10%
    );
    background: linear-gradient(
      180deg,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 1) 10%
    );
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#ffffff",endColorstr="#ffffff",GradientType=1);
  }

  .fade-out-down {
    animation: fade-out-down .3s ease;
  }
  .fade-in-down {
    animation: fade-in-down .3s ease;
  }

  @keyframes fade-out-down {
    0% {
      opacity: 1;
      transform: translateY(1.5rem);
    }
    100% {
      opacity: 0;
      transform: translateY(-2rem);
    }
  }

  @keyframes fade-in-down {
    0% {
      opacity: 0;
      transform: translateY(-2rem);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
    
  }
</style>
